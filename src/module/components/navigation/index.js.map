{"version":3,"sources":["index.js"],"names":["React","useState","useEffect","useRef","View","Dimensions","Animated","Alert","StatusBar","PopUp","get","width","height","Navigator","props","popUpScreen","setPopUpScreen","background","Value","backgroundRef","popupRef","createRef","pages","initPage","find","page","init","scale","current","interpolate","inputRange","outputRange","extrapolate","border","animateBackground","value","spring","toValue","tension","friction","useNativeDriver","start","present","name","params","presentPage","dismiss","animted","snapTo","setTimeout","renderInitPage","createElement","screen","renderPopUp","p","renderContent","flex","position","top","left","snapPoints","popupStyle","backgroundColor","overflow","transform","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { View, Dimensions, Animated, Alert, StatusBar } from 'react-native'\nimport PopUp from './pop_up'\n\nconst { width, height } = Dimensions.get('window')\n\nconst Navigator = (props) => {\n  const [popUpScreen, setPopUpScreen] = useState(null)\n  const background = new Animated.Value(0)\n  const backgroundRef = useRef(background)\n  let popupRef = useRef(React.createRef())\n\n  const { pages } = props\n  const initPage = pages.find(page => page.init) || pages[0]\n\n  const scale = backgroundRef.current.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 0.9],\n    extrapolate: 'clamp'\n  })\n\n  const border = backgroundRef.current.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 12],\n    extrapolate: 'clamp',\n  })\n\n  const animateBackground = (value) => {\n    Animated.spring(backgroundRef.current, {\n      toValue: 1,\n      tension: 68,\n      friction: 12,\n      toValue: value,\n      useNativeDriver: true\n    }).start()\n  }\n\n  useEffect(() => {\n    if (popUpScreen != null) {\n      animateBackground(1)\n    } else {\n      animateBackground(0)\n    }\n  }, [popUpScreen])\n\n  present = (name, params = {}) => {\n    const presentPage = pages.find(page => page.name === name)\n    setPopUpScreen({ name: presentPage.name, props: { ...presentPage.props, ...params } })\n  }\n\n  dismiss = (animted = false) => {\n    if (animted) {\n      popupRef.current.snapTo(height)\n    }\n\n    setTimeout(() => {\n      setPopUpScreen(null)\n    }, animted ? 150 : 0)\n    \n  }\n\n  renderInitPage = () => {\n    return React.createElement(initPage.screen, { ...initPage.props, present, dismiss })\n  }\n\n  renderPopUp = () => {\n    if (!popUpScreen) {\n     return null \n    }\n\n    const page = pages.find(p => p.name === popUpScreen.name)\n\n    const renderContent = () => {\n      return React.createElement(page.screen, { ...popUpScreen.props, dismiss })\n    }\n\n    return (\n      <View style={[{ flex: 1, position: 'absolute', top: 0, left: 0 }]}>\n        <StatusBar backgroundColor={'#000'} animated barStyle=\"light-content\" />\n        <PopUp\n          ref={popupRef}\n          snapPoints={page.snapPoints || [50, height]}\n          renderContent={renderContent}\n          dismiss={dismiss}\n          scrollStyle={page.popupStyle}\n        />\n      </View>\n    )\n  }\n\n  return (\n    <View style={{ width, height, backgroundColor: '#000' }}>\n      <StatusBar backgroundColor={'#fff'} animated barStyle=\"dark-content\" />\n      <Animated.View \n        style={{ \n          width, \n          height, \n          overflow: 'hidden',\n          transform: [{ scale }],\n          backgroundColor: '#fff',\n          borderRadius: border\n        }}\n      >\n        {renderInitPage()}\n      </Animated.View>\n      {renderPopUp()}\n    </View>\n  )\n}\n\nexport default Navigator"]}